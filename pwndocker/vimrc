"-----------------------------------
" 表示
"-----------------------------------

" シンタックスハイライト
syntax enable

" Esc２回でハイライトを消す
nmap <Esc><Esc> :nohl<CR>

" tabキーでのインデント時半角スペースを挿入 
" Makefileの場合スペースではなくtabを挿入
let _curfile=expand("%:r")
if _curfile == 'Makefile' || _curfile == 'makefile'
	set noexpandtab
else
	set expandtab
endif

" インデント幅
set shiftwidth=4

" tabキー押下時の文字幅
set softtabstop=4

" tab文字の表示幅
set tabstop=4

" 対応する括弧を強調
set showmatch

" 行番号表示
set number

" スクロールをファイル内のみに設定
set mouse=a

" 自動インデント
set smartindent

" ファイル名を常時表示
set laststatus=2

" カーソルが何列何行目か表示する
set ruler

" コマンドライン補完
set wildmenu




"-----------------------------------
" 検索
"-----------------------------------

" 小文字で検索するときだけ大小を無視する
set ignorecase

" インクリメンタルサーチ(1文字入力毎に検索)
set incsearch

" 検索結果をハイライト
set hlsearch
 



"-----------------------------------
" その他
"-----------------------------------

" コマンドラインの履歴件数
set history=10000

" 文字コードをUTF-8に設定
set fenc=utf-8

" 保存時にsudo権限で無理やり保存
cnoremap w!! w !sudo tee > /dev/null %<CR> :e!<CR>

" undoの永続化
if has('persistent_undo')
	let undo_path = expand('~/.vim/undo')
    " ディレクトリが存在しない場合は作成
    if !isdirectory(undo_path)
        call mkdir(undo_path, 'p')
    endif
	exe 'set undodir=' . undo_path
	set undofile
endif

" 前回開いたカーソル位置から再開
augroup vimrcEx
  au BufRead * if line("'\"") > 0 && line("'\"") <= line("$") |
  \ exe "normal g`\"" | endif
augroup END

" カーソルを末尾から次の行の先頭
" 行の先頭から前の末尾へ移動できるようにする
set whichwrap=b,s,h,l,<,>,[,],~

" 補完表示時のEnterで改行をしない
inoremap <expr><CR>  pumvisible() ? "<C-y>" : "<CR>"

" メッセージを英語化
language C
